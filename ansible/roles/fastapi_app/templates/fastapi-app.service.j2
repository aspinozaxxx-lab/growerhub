[Unit]
Description=FastAPI (Uvicorn) service for {{ app_name }}

# Ждём пока сеть поднята полностью и Docker-демон запущен
After=network-online.target docker.service
Wants=network-online.target docker.service

[Service]
PermissionsStartOnly=true

# 1) Освободить порт, если он вдруг залип после кривого останова
ExecStartPre=/usr/bin/bash -lc '/usr/bin/ss -ltnp | /usr/bin/grep -q ":{{ app_port }} " && /usr/bin/fuser -k {{ app_port }}/tcp || true'

# 2) Дать базе данных в контейнере проснуться.
#    Это критично после ребута, когда uvicorn поднимается быстрее, чем Postgres.
ExecStartPre=/bin/sleep 10

User={{ app_user }}
Group={{ app_group }}
WorkingDirectory={{ app_workdir }}

# Прокидываем PYTHONPATH к каталогу приложения
Environment=PYTHONPATH={{ app_workdir }}
{% for k, v in app_env.items() -%}
Environment={{ k }}={{ v }}
{% endfor %}

# Жёстко целимся в run:app и явно указываем --app-dir
ExecStart={{ app_venv }}/bin/uvicorn --app-dir {{ app_workdir }} run:app --host {{ app_host }} --port {{ app_port }} --workers {{ app_workers }}{% if app_reload %} --reload{% endif %}

ExecStop=/bin/kill -s SIGTERM $MAINPID
KillSignal=SIGINT
TimeoutStopSec=30

# ВАЖНО: хотим автоподъём всегда, а не только "если код возврата плохой"
Restart=always
RestartSec=5

StandardOutput=journal
StandardError=journal

[Install]
WantedBy=multi-user.target
