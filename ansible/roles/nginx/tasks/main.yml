---
- name: Ensure Nginx is installed
  ansible.builtin.apt:
    name: nginx
    update_cache: true
    state: present

- name: Create backup of current /etc/nginx (одноразово, если нет бэкапа)
  ansible.builtin.command:
    cmd: tar -czf /etc/nginx.backup.tgz /etc/nginx
    creates: /etc/nginx.backup.tgz

# Валидация конфигурации
- name: nginx -t (assert success)
  ansible.builtin.command: nginx -t
  register: nginx_test
  changed_when: false
  failed_when: nginx_test.rc != 0

- name: Ensure certbot installed when HTTPS enabled
  when: nginx_enable_https
  become: true
  block:
    - name: Install certbot (via snap)
      apt:
        name: snapd
        state: present
        update_cache: yes

    - name: Install certbot
      snap:
        name: certbot
        classic: yes
        state: present

    - name: Link certbot binary
      file:
        src: /snap/bin/certbot
        dest: /usr/bin/certbot
        state: link
        force: yes

    - name: Create ACME challenge dir
      file:
        path: /var/www/letsencrypt/.well-known/acme-challenge
        state: directory
        mode: "0755"
        owner: www-data
        group: www-data

- name: Deploy captured nginx config tree
  ansible.builtin.copy:
    src: etc/nginx/
    dest: /etc/nginx/
    owner: root
    group: root
    mode: "0644"
  notify:
    - Test nginx config
    - Reload nginx

- name: Obtain/renew Let’s Encrypt certificate
  when: nginx_enable_https
  become: true
  command: >
    certbot certonly --webroot
    -w /var/www/letsencrypt
    -d {{ nginx_domain }} {% for d in nginx_alt_domains %}-d {{ d }} {% endfor %}
    --non-interactive --agree-tos -m {{ nginx_letsencrypt_email }}
    {% if nginx_letsencrypt_staging %}--staging{% endif %}
  args:
    creates: "/etc/letsencrypt/live/{{ nginx_domain }}/fullchain.pem"
  notify: reload nginx
