---
- name: Ensure Nginx is installed
  ansible.builtin.apt:
    name: nginx
    update_cache: true
    state: present

#- name: Create backup of current /etc/nginx (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ, –µ—Å–ª–∏ –Ω–µ—Ç –±—ç–∫–∞–ø–∞)
#  ansible.builtin.command:
#    cmd: tar -czf /etc/nginx.backup.tgz /etc/nginx
#    creates: /etc/nginx.backup.tgz

# –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
- name: nginx -t (assert success)
  ansible.builtin.command: nginx -t
  register: nginx_test
  changed_when: false
  failed_when: nginx_test.rc != 0

# === HTTPS –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ (–µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω) ===
- name: Ensure certbot installed when HTTPS enabled
  when: nginx_enable_https
  become: true
  block:
    - name: Install certbot (via snap)
      ansible.builtin.apt:
        name: snapd
        state: present
        update_cache: yes

    - name: Install certbot
      community.general.snap:
        name: certbot
        classic: yes
        state: present

    - name: Link certbot binary
      ansible.builtin.file:
        src: /snap/bin/certbot
        dest: /usr/bin/certbot
        state: link
        force: yes

    - name: Create ACME challenge dir
      ansible.builtin.file:
        path: /var/www/letsencrypt/.well-known/acme-challenge
        state: directory
        mode: "0755"
        owner: www-data
        group: www-data

# ‚¨áÔ∏è –í–ê–ñ–ù–û: –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –æ–∫–∞–∑–∞—Ç—å—Å—è —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –±–ª–æ–∫ —Å /.well-known/acme-challenge
# –í–∞—Ä–∏–∞–Ω—Ç –ê (–∫–∞–∫ —É —Ç–µ–±—è): –∫–æ–ø–∏—Ä—É–µ–º –¥–µ—Ä–µ–≤–æ etc/nginx/ –∏–∑ —Ä–æ–ª–∏
- name: Deploy captured nginx config tree
  ansible.builtin.copy:
    src: etc/nginx/
    dest: /etc/nginx/
    owner: root
    group: root
    # –ù–µ –∑–∞–¥–∞—ë–º –æ–±—â–∏–π mode –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π, —á—Ç–æ–±—ã –Ω–µ —Å–±–∏—Ç—å –ø—Ä–∞–≤–∞; —Ñ–∞–π–ª—ã –ø–æ–ª—É—á–∞—Ç 0644 –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é
    # mode: "0644"
  notify:
    - test nginx config
    - reload nginx

# –í–∞—Ä–∏–∞–Ω—Ç –ë (—Ä–µ–∫–æ–º–µ–Ω–¥—É—é –≤ –±—É–¥—É—â–µ–º): —à–∞–±–ª–æ–Ω vhost —á–µ—Ä–µ–∑ templates/site.conf.j2
# - name: Deploy site from template
#   ansible.builtin.template:
#     src: site.conf.j2
#     dest: /etc/nginx/sites-available/growerhub.conf
#     mode: "0644"
#   notify:
#     - test nginx config
#     - reload nginx
# - name: Enable site symlink
#   ansible.builtin.file:
#     src: /etc/nginx/sites-available/growerhub.conf
#     dest: /etc/nginx/sites-enabled/growerhub.conf
#     state: link
#     force: true
#   notify:
#     - test nginx config
#     - reload nginx
# - name: Disable default site if present
#   ansible.builtin.file:
#     path: /etc/nginx/sites-enabled/default
#     state: absent
#   notify:
#     - test nginx config
#     - reload nginx

# üîî –í—ã–ø–æ–ª–Ω–∏–º —Ö–µ–Ω–¥–ª–µ—Ä—ã —Å–µ–π—á–∞—Å (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–º nginx), —á—Ç–æ–±—ã certbot –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ webroot
- name: Apply config now before certbot
  ansible.builtin.meta: flush_handlers

# –í—ã–ø—É—Å–∫–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (webroot). –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–æ–º–µ–Ω –∏ email –∑–∞–¥–∞–Ω—ã
- name: Obtain/renew Let‚Äôs Encrypt certificate
  when: nginx_enable_https and (nginx_domain | length > 0) and (nginx_letsencrypt_email | length > 0)
  become: true
  ansible.builtin.command: >
    certbot certonly --webroot
    -w /var/www/letsencrypt
    -d {{ nginx_domain }} {% for d in nginx_alt_domains %}-d {{ d }} {% endfor %}
    --non-interactive --agree-tos -m {{ nginx_letsencrypt_email }}
    {% if nginx_letsencrypt_staging %}--staging{% endif %}
  args:
    creates: "/etc/letsencrypt/live/{{ nginx_domain }}/fullchain.pem"
  notify:
    - test nginx config
    - reload nginx

# –•—É–∫ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏—è ‚Äî –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º nginx –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
- name: Ensure certbot renew hook reloads nginx
  when: nginx_enable_https
  become: true
  ansible.builtin.copy:
    dest: /etc/letsencrypt/renewal-hooks/deploy/01-reload-nginx.sh
    mode: "0755"
    content: |
      #!/bin/sh
      systemctl reload nginx || true
